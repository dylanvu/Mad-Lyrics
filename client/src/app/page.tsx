"use client";

import { useState } from "react";

interface LyricPart {
    part: string;
    lyrics: string[];
}

const example = `
[
  {
    "part": "Verse",
    "lyrics": [
      "The stars at night, they shine so {adjective},",
      "Guiding me through the {noun} so {adjective}.",
      "My {noun} by my side, steady and {adjective},",
      "Through the silent streets, our spirits {verb}."
    ]
  },
  {
    "part": "Chorus",
    "lyrics": [
      "With every heartbeat, I feel {adjective},",
      "In a world where {noun} often {verb}.",
      "But in your {noun}, I find my {noun},",
      "And in your eyes, the {noun} I've always {verb}."
    ]
  },
  {
    "part": "Bridge",
    "lyrics": [
      "In the quiet of the {noun}, we {verb},",
      "To the music that makes our souls {verb},",
      "Hand in hand, we {verb} and {verb},",
      "In our {noun} world, where love never {verb}."
    ]
  },
  {
    "part": "Outro",
    "lyrics": [
      "So here's to our {noun}, our bond, and our {noun},",
      "In this journey, we're never {adjective}.",
      "From {noun} to {noun}, under the {noun}'s glow,",
      "Together, into the future we {verb}."
    ]
  }
]
`;

export default function Home() {
    const [inputs, setInputs] = useState<string[]>([]);

    // convert from string to json
    const json = JSON.parse(example) as LyricPart[];

    // count the number of {} (inputs)
    let inputCount = 0;
    // regex generated by chatgpt lol
    const inputRegex = /\{.*?\}/g;
    for (const part of json) {
        for (const lyric of part.lyrics) {
            const matches = lyric.match(inputRegex);
            inputCount += matches ? matches.length : 0;
        }
    }
    console.log(inputCount);

    // plan: assign each input component

    return (
        <main className="flex min-h-screen flex-col items-center justify-between p-24">
            <div className="main-div">
                {json.map((part, index) => {
                    // plan: split each string up by the inputRegex, and then insert a component between each
                    for (const lyric of part.lyrics) {
                        const staticLyrics = lyric.split(inputRegex);
                        // generate the component

                        console.log(staticLyrics);
                    }
                    return (
                        <div key={`lyric-part-${index}`}>
                            <div>{part.part}</div>
                            {part.lyrics.map((lyric) => {
                                return <div>{lyric}</div>;
                            })}
                        </div>
                    );
                })}
            </div>
        </main>
    );
}
